name: tsk

services:
  api:
    container_name: tsk_api
    build: ./Tsk.HttpApi
    ports:
      - 5071:8080
    environment:
      ConnectionStrings__PostgreSQL: 'Server=postgres;Port=5432;Database=postgres;User Id=postgres;Password=postgres'
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: tsk_keycloak
    ports:
      - 5074:8080
    environment:
      KEYCLOAK_ADMIN: keycloak
      KEYCLOAK_ADMIN_PASSWORD: keycloak
      DB_VENDOR: h2
      KC_HEALTH_ENABLED: true
    command:
      - start-dev
      - --import-realm
    volumes:
      - keycloak_volume:/opt/keycloak/data/import
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 5s
      timeout: 5s
      retries: 30
  postgres:
    image: postgres
    container_name: tsk_postgres
    restart: always
    ports:
      - 5072:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_volume:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: tsk_pgadmin
    restart: always
    ports:
      - 5073:80
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_volume:/var/lib/pgadmin

volumes:
  keycloak_volume:
  postgres_volume:
  pgadmin_volume:
